package hello;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
@RequestMapping(path = "/tipodocumento") // This means URL's start with /demo (after Application path)
public class TipoDocumentoController {
    
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private TipoDocumentoRepository tipoDocumentoRepository;

    @GetMapping(path = "/add") // Map ONLY GET Requests
    public @ResponseBody
    String addNewTipoDocumento(@RequestParam String DescripTipoDoc) {
        TipoDocumento t = new TipoDocumento();
        t.setDescripTipoDoc(DescripTipoDoc);        
        tipoDocumentoRepository.save(t);
        return "Salvado";
    }

    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<TipoDocumento> getAllTipoDocumento() {
        // This returns a JSON or XML with the users
        return tipoDocumentoRepository.findAll();
    }

    @GetMapping(path = "/delete")
    public @ResponseBody
    String deleteTipoDocumento(@RequestParam long idTipoDoc) {

        if (!tipoDocumentoRepository.exists(idTipoDoc)) {
            return "No hay registro";
        } else {
            TipoDocumento t = tipoDocumentoRepository.findOne(idTipoDoc);
            tipoDocumentoRepository.delete(t);
            return "Borrado";
        }
    }

    @GetMapping(path = "/update")
    public @ResponseBody
    String updateTipoDocumento(@RequestParam long idTipoDoc, @RequestParam String DescripTipoDoc) {
        if (!tipoDocumentoRepository.exists(idTipoDoc)) {
            return "No hay registro";
        } else {
            TipoDocumento t = tipoDocumentoRepository.findOne(idTipoDoc);
            t.setDescripTipoDoc(DescripTipoDoc);
            tipoDocumentoRepository.save(t);
            return "Actualizado";
        }
    }
    
}
